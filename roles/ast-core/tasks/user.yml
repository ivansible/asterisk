---
- name: grant remote user with access to asterisk
  user:
    name: "{{ ansible_user_id }}"
    groups: asterisk
    append: true
  become: true

- name: check whether bash alias file already exists
  stat:
    path: ~/.local/bashrc/4alias.sh
  register: stat_bash_alias

- name: add asterisk bash aliases
  block:
    - name: add user-local asterisk aliases (ok to fail, will rescue)
      lineinfile:
        path: ~/.local/bashrc/4alias.sh
        line: "alias {{ item.0 }}='{{ item.1 }}'"
        regexp: "^alias {{ item.0 }}="
        insertafter: '^# END ANSIBLE'
      no_log: "{{ hide_secrets |bool }}"  # reduce possible error message
      loop: "{{ aliases |dictsort }}"
      loop_control:
        label: "{{ item.0 }}"
      become: false
  rescue:
    - name: add global asterisk aliases
      lineinfile:
        path: /etc/bash_completion.d/asterisk
        line: "alias {{ item.0 }}='{{ item.1 }}'"
        regexp: "^alias {{ item.0 }}="
        create: true
        mode: 0644
      loop: "{{ aliases |dictsort }}"
      loop_control:
        label: "{{ item.0 }}"
      become: true
  vars:
    aliases:
      astcli: 'setterm -linewrap off ; sudo asterisk -r ; setterm -linewrap on'
...
