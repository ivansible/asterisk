---
- name: verify that asterisk certificate and key exist
  file:
    path: "{{ item }}"
    state: file
  loop:
    - "{{ ast_ssl_cert }}"
    - "{{ ast_ssl_key }}"

- name: grant asterisk user with access to ssl private key
  user:
    name: asterisk
    groups: "{{ certbot_group |default('ssl-cert') }}"
    append: true
  notify: restart asterisk service

- name: ensure that ssl key file is readable by asterisk, not by world
  file:
    path: "{{ ast_ssl_key }}"
    state: file
    group: "{{ certbot_group |default('ssl-cert') }}"
    mode: 'o='

- name: ensure that asterisk can accces private key directory
  file:
    path: "{{ ast_ssl_key |dirname }}"
    state: directory
    group: "{{ certbot_group |default('ssl-cert') }}"
    mode: g+rx

# Note:
# when `rungroup` is set, the asterisk process will have only
# those access permissions that are associated with that group.
# when `rungroup` is *not* set, but `runuser` is set, the asterisk
# process will have access permissions associated with *all*
# groups where the user participates.
# this allows to control permissions of the asterisk process
# more flexibly (e.g. access to ssl certificates).
- name: disable fixed process group for access to ssl certificates
  ini_file:
    dest: /etc/asterisk/asterisk.conf
    section: options
    option: rungroup
    state: absent
    mode: 0640
  notify: restart asterisk service
...
