---
- name: open asterisk sip port for all in ferm
  # this step is separate because we want to specify
  # a list of ip networks given access to the non-tls port
  ferm_port:
    port: "{{ ast_sip_port }}"
    zone: external
    comment: asterisk sip
  when: ast_sip_allowed_networks |length == 0
        or 'any' in ast_sip_allowed_networks

- name: open asterisk sip port for some networks in ferm
  ferm_port:
    port: "{{ ast_sip_port }}"
    zone: internal
    comment: asterisk sip
  when: ast_sip_allowed_networks |length > 0
        and 'any' not in ast_sip_allowed_networks

- name: add networks allowed for asterisk sip port in ferm
  ferm_host:
    host: "{{ ast_sip_allowed_networks }}"
    zone: internal
    comment: asterisk
  when: "'any' not in ast_sip_allowed_networks"


- name: set connection limit on asterisk sip port
  ferm_rule:
    name: asterisk-sip-limit
    rule: |
      # Asterisk SIP Limit
      proto tcp syn dport {{ ast_sip_port }} {{ match_limit }} DROP;
      proto tcp syn dport {{ ast_tls_port }} {{ match_limit }} DROP;
      proto udp     dport {{ ast_sip_port }} {{ match_limit }} DROP;
    hook: input
    prio: 50
  vars:
    match_limit: >-
      mod hashlimit
      hashlimit-above {{ ast_sip_limit }}
      hashlimit-burst {{ ast_sip_burst }}
      hashlimit-mode srcip
      hashlimit-name asterisk-sip
  when: ast_sip_limit != ''  # noqa 602


- name: open asterisk sip-tls port in ferm
  ferm_port:
    port: "{{ ast_tls_port }}"
    zone: external
    comment: asterisk tls

- name: open asterisk rtp ports in ferm
  ferm_port:
    port: "{{ ast_rtp_port_start }}:{{ ast_rtp_port_end }}"
    proto: udp
    zone: external
    comment: asterisk rtp


- name: close asterisk ami ports in ferm
  ferm_port:
    port: "{{ ast_ami_port }},{{ ast_http_port }},{{ ast_https_port }}"
    zone: internal
    comment: asterisk ami

- name: disable annoying sip hackers in ferm
  ferm_host:
    host: "{{ ast_reject_networks }}"
    zone: blocked
    comment: asterisk
...
